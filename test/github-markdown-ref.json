"<!DOCTYPE html>\n<html>\n<head>\n  <title>file test.md in test</title>\n  <link rel=\"stylesheet\" href=\"test/ghstyle.css\">\n</head>\n<body>\n""<h1>\n<a id=\"user-content-something-really-cool\" class=\"anchor\" href=\"#something-really-cool\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Something Really Cool</h1>\n<p>Hello world github/linguist#1 <strong>cool</strong>, and #1!<br>\nAnd that is not all.</p>\n<h1>\n<a id=\"user-content-lists\" class=\"anchor\" href=\"#lists\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Lists</h1>\n<h2>\n<a id=\"user-content-numbered-list\" class=\"anchor\" href=\"#numbered-list\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Numbered List</h2>\n<ol>\n<li>Item One</li>\n<li>Item Two</li>\n<li>Item Three</li>\n</ol>\n<h2>\n<a id=\"user-content-bullet-list\" class=\"anchor\" href=\"#bullet-list\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Bullet List</h2>\n<ul>\n<li>Item One</li>\n<li>Item Two</li>\n<li>Item Three</li>\n</ul>\n<h1>\n<a id=\"user-content-code-example\" class=\"anchor\" href=\"#code-example\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Code Example</h1>\n<h2>\n<a id=\"user-content-code-enclosed-in-backquotes\" class=\"anchor\" href=\"#code-enclosed-in-backquotes\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Code enclosed in 'backquotes':</h2>\n<p>Always use <code>var</code> to define a variable. For example, <code>var baz = 'initial value';</code> would define\nvariable <code>baz</code>.</p>\n<h2>\n<a id=\"user-content-this-is-some-nonsense-javascript-code\" class=\"anchor\" href=\"#this-is-some-nonsense-javascript-code\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>This is some nonsense javascript code:</h2>\n<pre><code>    var fs = require('fs');\n    var count = 0, text;\n    exports.bar = {\n      boo: true,\n      baz: 'Fred'\n    };\n\n    function foo(inc) {\n      try {\n        console.log(\"foo has been called\");\n        count = count + inc;\n        if (count &gt;= 10) {\n          count = 0;\n        } else {\n          text = fs.readFileSync('foo.txt');\n        }\n      catch(err) {\n        throw new Error('Help! ' + err);\n      }\n    }\n</code></pre>\n<h1>\n<a id=\"user-content-fenced-javascript-code\" class=\"anchor\" href=\"#fenced-javascript-code\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Fenced Javascript Code</h1>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-s1\">fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">count</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">text</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">exports</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bar</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">boo</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">baz</span>: <span class=\"pl-s\">'Fred'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">inc</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"foo has been called\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">count</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">count</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">inc</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">count</span> &gt;= <span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">count</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">text</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">readFileSync</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'foo.txt'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-en\">catch</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\"></span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Help! '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<h2>\n<a id=\"user-content-fenced-ruby-code\" class=\"anchor\" href=\"#fenced-ruby-code\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Fenced Ruby Code</h2>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-en\">require</span> <span class=\"pl-s\">\"bunny\"</span>\n\n<span class=\"pl-s1\">conn</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Bunny</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:hostname</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s\">\"127.0.0.1\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:port</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">5672</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-s1\">conn</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span>\n\n<span class=\"pl-s1\">ch</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">conn</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create_channel</span>\n<span class=\"pl-s1\">q</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">ch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"hello\"</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">q</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscribe</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:ack</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:block</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">delivery_info</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">properties</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">body</span>|\n    <span class=\"pl-en\">puts</span> <span class=\"pl-s\">\" [x] Received '<span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">body</span><span class=\"pl-kos\">}</span></span>'\"</span>\n    <span class=\"pl-c\"># imitate some work</span>\n    <span class=\"pl-en\">sleep</span> <span class=\"pl-s1\">body</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">count</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\".\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_i</span>\n    <span class=\"pl-en\">puts</span> <span class=\"pl-s\">\" [x] Done\"</span>\n    <span class=\"pl-s1\">ch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">ack</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">delivery_info</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">delivery_tag</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">body</span> == <span class=\"pl-s\">\"stop\"</span>\n        <span class=\"pl-s1\">delivery_info</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">consumer</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cancel</span>\n    <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h2>\n<a id=\"user-content-fenced-coffeescript-code\" class=\"anchor\" href=\"#fenced-coffeescript-code\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Fenced Coffeescript Code</h2>\n<div class=\"highlight highlight-source-coffee\"><pre><span class=\"pl-v\">fs</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">require</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>fs<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-v\">count</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n<span class=\"pl-v\">text</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>\n<span class=\"pl-c1\">exports</span>.<span class=\"pl-smi\">bar</span> <span class=\"pl-k\">=</span>\n  <span class=\"pl-v\">boo</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">true</span>\n  <span class=\"pl-v\">baz</span><span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Fred<span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-en\">foo</span> <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">inc</span>) <span class=\"pl-k\">-&gt;</span>\n  <span class=\"pl-k\">try</span>\n    <span class=\"pl-en\">console</span>.<span class=\"pl-en\">log</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo has been called<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-v\">count</span> <span class=\"pl-k\">=</span> count <span class=\"pl-k\">+</span> inc\n    <span class=\"pl-k\">if</span> count <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">10</span>\n      <span class=\"pl-v\">count</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n    <span class=\"pl-k\">else</span>\n      <span class=\"pl-v\">text</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">fs</span>.<span class=\"pl-en\">readFileSync</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo.txt<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-k\">catch</span> err\n    <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Error</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Help! <span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">+</span> err</pre></div>\n<h2>\n<a id=\"user-content-fenced-python-code\" class=\"anchor\" href=\"#fenced-python-code\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Fenced Python Code</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">fib</span>(<span class=\"pl-s1\">n</span>):\n    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">n</span> <span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">1</span>:\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">n</span> <span class=\"pl-c1\">*</span> <span class=\"pl-en\">fib</span>(<span class=\"pl-s1\">n</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>)\n    <span class=\"pl-k\">else</span>:\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">1</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">'__main__'</span>:\n    <span class=\"pl-k\">import</span> <span class=\"pl-s1\">sys</span>\n    <span class=\"pl-s1\">n</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">int</span>(<span class=\"pl-s1\">sys</span>.<span class=\"pl-s1\">argv</span>[<span class=\"pl-c1\">1</span>]) <span class=\"pl-k\">if</span> <span class=\"pl-en\">len</span>(<span class=\"pl-s1\">sys</span>.<span class=\"pl-s1\">argv</span>) <span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">else</span> <span class=\"pl-c1\">5</span>\n    <span class=\"pl-s1\">f</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">fib</span>(<span class=\"pl-s1\">n</span>)\n    <span class=\"pl-k\">print</span> <span class=\"pl-s\">'fib('</span>, <span class=\"pl-s1\">n</span>, <span class=\"pl-s\">') is '</span>, <span class=\"pl-s1\">f</span></pre></div>\n<h1>\n<a id=\"user-content-in-conclusion\" class=\"anchor\" href=\"#in-conclusion\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>In Conclusion</h1>\n<p>You <em>can</em> do it <strong>too</strong>!\nTry to enclose <code>code</code> in <em>backquotes</em>.</p>\n""\n""</body>\n</html>\n"